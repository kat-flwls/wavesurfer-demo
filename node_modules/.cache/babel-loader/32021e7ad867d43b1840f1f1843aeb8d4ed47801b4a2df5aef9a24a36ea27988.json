{"ast":null,"code":"var _jsxFileName = \"/Users/katmaskell/Documents/learning/react-hooks-wavesurfer/src/Waveform.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { FaPlayCircle, FaPauseCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Waveform = ({\n  audio\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const waveSurferRef = useRef(null);\n  const [isPlaying, toggleIsPlaying] = useState(false);\n  const waveSurfer = WaveSurfer.create({\n    container: containerRef.current,\n    waveColor: \"rgb(200, 0, 200)\",\n    responsive: true,\n    cursorWidth: 0,\n    barWidth: 2,\n    barHeight: 10\n  });\n  waveSurfer.load(audio);\n  waveSurfer.on(\"ready\", () => {\n    waveSurferRef.current = waveSurfer;\n  });\n  const handlePlay = () => {\n    toggleIsPlaying(waveSurferRef.current.isPlaying());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handlePlay();\n      },\n      type: \"button\",\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPauseCircle, {\n        size: \"3em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaPlayCircle, {\n        size: \"3em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Waveform, \"IOH2c3pyl8XYVIKpw4mLNway5NQ=\");\n_c = Waveform;\nWaveform.propTypes = {\n  audio: PropTypes.string.isRequired\n};\nexport default Waveform;\nvar _c;\n$RefreshReg$(_c, \"Waveform\");","map":{"version":3,"names":["React","useRef","useState","PropTypes","WaveSurfer","FaPlayCircle","FaPauseCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","Waveform","audio","_s","containerRef","waveSurferRef","isPlaying","toggleIsPlaying","waveSurfer","create","container","current","waveColor","responsive","cursorWidth","barWidth","barHeight","load","on","handlePlay","children","onClick","type","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/katmaskell/Documents/learning/react-hooks-wavesurfer/src/Waveform.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { FaPlayCircle, FaPauseCircle } from \"react-icons/fa\";\n\nconst Waveform = ({ audio }) => {\n  const containerRef = useRef(null);\n  const waveSurferRef = useRef<any>(null);\n  const [isPlaying, toggleIsPlaying] = useState(false);\n\n  const waveSurfer = WaveSurfer.create({\n    container: containerRef.current,\n    waveColor: \"rgb(200, 0, 200)\",\n    responsive: true,\n    cursorWidth: 0,\n    barWidth: 2,\n    barHeight: 10,\n  });\n  waveSurfer.load(audio);\n\n  waveSurfer.on(\"ready\", () => {\n    waveSurferRef.current = waveSurfer;\n  });\n\n  const handlePlay = () => {\n    toggleIsPlaying(waveSurferRef.current.isPlaying());\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          handlePlay();\n        }}\n        type=\"button\"\n      >\n        {isPlaying ? <FaPauseCircle size=\"3em\" /> : <FaPlayCircle size=\"3em\" />}\n      </button>\n      <div ref={containerRef.current} />\n    </>\n  );\n};\n\nWaveform.propTypes = {\n  audio: PropTypes.string.isRequired,\n};\n\nexport default Waveform;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMc,aAAa,GAAGd,MAAM,CAAM,IAAI,CAAC;EACvC,MAAM,CAACe,SAAS,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEpD,MAAMgB,UAAU,GAAGd,UAAU,CAACe,MAAM,CAAC;IACnCC,SAAS,EAAEN,YAAY,CAACO,OAAO;IAC/BC,SAAS,EAAE,kBAAkB;IAC7BC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAE;EACb,CAAC,CAAC;EACFR,UAAU,CAACS,IAAI,CAACf,KAAK,CAAC;EAEtBM,UAAU,CAACU,EAAE,CAAC,OAAO,EAAE,MAAM;IAC3Bb,aAAa,CAACM,OAAO,GAAGH,UAAU;EACpC,CAAC,CAAC;EAEF,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBZ,eAAe,CAACF,aAAa,CAACM,OAAO,CAACL,SAAS,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MACEuB,OAAO,EAAEA,CAAA,KAAM;QACbF,UAAU,CAAC,CAAC;MACd,CAAE;MACFG,IAAI,EAAC,QAAQ;MAAAF,QAAA,EAEZd,SAAS,gBAAGR,OAAA,CAACF,aAAa;QAAC2B,IAAI,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAG7B,OAAA,CAACH,YAAY;QAAC4B,IAAI,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACT7B,OAAA;MAAK8B,GAAG,EAAExB,YAAY,CAACO;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClC,CAAC;AAEP,CAAC;AAACxB,EAAA,CApCIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAsCdA,QAAQ,CAAC6B,SAAS,GAAG;EACnB5B,KAAK,EAAET,SAAS,CAACsC,MAAM,CAACC;AAC1B,CAAC;AAED,eAAe/B,QAAQ;AAAC,IAAA4B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/katmaskell/Documents/learning/react-hooks-wavesurfer/src/Waveform.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { FaPlayCircle, FaPauseCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Waveform = ({\n  audio\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const waveSurferRef = useRef({\n    isPlaying: () => false\n  });\n  const [isPlaying, toggleIsPlaying] = useState(false);\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const waveSurfer = WaveSurfer.create({\n      container: containerRef.current,\n      responsive: true,\n      cursorWidth: 0,\n      barWidth: 2,\n      barHeight: 10\n    });\n    waveSurfer.load(audio);\n    waveSurfer.on(\"ready\", () => {\n      waveSurferRef.current = waveSurfer;\n    });\n    return () => {\n      waveSurfer.destroy();\n    };\n  }, [audio]);\n  const handlePlay = () => {\n    waveSurferRef.current.playPause();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        toggleIsPlaying(waveSurferRef.current.isPlaying());\n      },\n      type: \"button\",\n      children: [\"hello\", isPlaying ? /*#__PURE__*/_jsxDEV(FaPauseCircle, {\n        size: \"3em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaPlayCircle, {\n        size: \"3em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Waveform, \"7x2w+s8FFxteEMzQHyqBAXFcTYM=\");\n_c = Waveform;\nWaveform.propTypes = {\n  audio: PropTypes.string.isRequired\n};\nexport default Waveform;\nvar _c;\n$RefreshReg$(_c, \"Waveform\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","WaveSurfer","FaPlayCircle","FaPauseCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","Waveform","audio","_s","containerRef","waveSurferRef","isPlaying","toggleIsPlaying","current","waveSurfer","create","container","responsive","cursorWidth","barWidth","barHeight","load","on","destroy","handlePlay","playPause","children","onClick","type","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/katmaskell/Documents/learning/react-hooks-wavesurfer/src/Waveform.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { FaPlayCircle, FaPauseCircle } from \"react-icons/fa\";\n\nconst Waveform = ({ audio }) => {\n  const containerRef = useRef(null);\n  const waveSurferRef = useRef({\n    isPlaying: () => false,\n  });\n  const [isPlaying, toggleIsPlaying] = useState(false);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const waveSurfer = WaveSurfer.create({\n      container: containerRef.current,\n      responsive: true,\n      cursorWidth: 0,\n      barWidth: 2,\n      barHeight: 10,\n    });\n    waveSurfer.load(audio);\n    waveSurfer.on(\"ready\", () => {\n      waveSurferRef.current = waveSurfer;\n    });\n\n    return () => {\n      waveSurfer.destroy();\n    };\n  }, [audio]);\n\n  const handlePlay = () => {\n    waveSurferRef.current.playPause();\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          toggleIsPlaying(waveSurferRef.current.isPlaying());\n        }}\n        type=\"button\"\n      >\n        hello\n        {isPlaying ? <FaPauseCircle size=\"3em\" /> : <FaPlayCircle size=\"3em\" />}\n      </button>\n      <div ref={containerRef.current} />\n    </>\n  );\n};\n\nWaveform.propTypes = {\n  audio: PropTypes.string.isRequired,\n};\n\nexport default Waveform;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMc,aAAa,GAAGd,MAAM,CAAC;IAC3Be,SAAS,EAAEA,CAAA,KAAM;EACnB,CAAC,CAAC;EACF,MAAM,CAACA,SAAS,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEpDF,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,YAAY,CAACI,OAAO,EAAE;IAE3B,MAAMC,UAAU,GAAGf,UAAU,CAACgB,MAAM,CAAC;MACnCC,SAAS,EAAEP,YAAY,CAACI,OAAO;MAC/BI,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE;IACb,CAAC,CAAC;IACFN,UAAU,CAACO,IAAI,CAACd,KAAK,CAAC;IACtBO,UAAU,CAACQ,EAAE,CAAC,OAAO,EAAE,MAAM;MAC3BZ,aAAa,CAACG,OAAO,GAAGC,UAAU;IACpC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXA,UAAU,CAACS,OAAO,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEX,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBd,aAAa,CAACG,OAAO,CAACY,SAAS,CAAC,CAAC;EACnC,CAAC;EAED,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MACEwB,OAAO,EAAEA,CAAA,KAAM;QACbf,eAAe,CAACF,aAAa,CAACG,OAAO,CAACF,SAAS,CAAC,CAAC,CAAC;MACpD,CAAE;MACFiB,IAAI,EAAC,QAAQ;MAAAF,QAAA,GACd,OAEC,EAACf,SAAS,gBAAGR,OAAA,CAACF,aAAa;QAAC4B,IAAI,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAG9B,OAAA,CAACH,YAAY;QAAC6B,IAAI,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACT9B,OAAA;MAAK+B,GAAG,EAAEzB,YAAY,CAACI;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClC,CAAC;AAEP,CAAC;AAACzB,EAAA,CA7CIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA+CdA,QAAQ,CAAC8B,SAAS,GAAG;EACnB7B,KAAK,EAAET,SAAS,CAACuC,MAAM,CAACC;AAC1B,CAAC;AAED,eAAehC,QAAQ;AAAC,IAAA6B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}